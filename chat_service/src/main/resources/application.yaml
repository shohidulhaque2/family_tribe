spring:
  application:
    name: chat-service

  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false

  datasource:
    url: ${MYSQL_JDBC:jdbc:mysql://localhost:3307/chat_service}
    username: ${RDS_USERNAME:user}
    password: ${RDS_PASSWORD:password}
    driver-class-name: com.mysql.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: true
    generate-ddl: true
  #    database-platform: org.hibernate.dialect.MySQL57Dialect
  #    database-platform: org.hibernate.dialect.MySQL57Dialect
  #   should work, but there is some issue. that is why it is commented out.
  #    properties:
  #      hibernate:
  #        dialect: org.hibernate.dialect.MySQL57Dialect

  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/changelog-master.xml

  thymeleaf:
    cache: false

  #  jackson:
  #    serialization:
  #      write-dates-as-timestamps: false


  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://dev-6167481.okta.com/oauth2/default/v1/keys
          issuer-uri: https://dev-6167481.okta.com/oauth2/default

server:
  port: 8087

logging:
  level:
    root: debug

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: ${EUREKA_URI:http://localhost:8761/eureka}

  instance:
    instance-id: ${spring.application.name}-${random.uuid}
    hostname: localhost
